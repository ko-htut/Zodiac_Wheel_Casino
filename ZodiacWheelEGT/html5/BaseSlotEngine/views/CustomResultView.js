CanvasView("CustomResultView", { WIDTH: 850 }, function () {
    function d(a, b, c, d, e, f) { return e > a && f > b && e < a + c && f < b + d ? !0 : !1 } function e(a) {
        a != this._selectedImage && (-1 != this._selectedImage && (this._context.clearRect(this._selectImageRect.x + this._selectedImage * this._selectImageRect.width, this._selectImageRect.y, this._selectImageRect.width, this._selectImageRect.height), this._context.fillStyle = "#8c8c8c", this._context.globalAlpha = 0.5, this._context.fillRect(this._selectImageRect.x + this._selectedImage * this._selectImageRect.width,
            this._selectImageRect.y, this._selectImageRect.width, this._selectImageRect.height), this._context.globalAlpha = 1, this._context.drawImage(this._config.reelImages[this._config.cardsInfo[this._selectedImage].reelImageIndex], this._config.cardsInfo[this._selectedImage].x, this._config.cardsInfo[this._selectedImage].y, this._config.reelWidth, this._config.imageHeight, this._selectImageRect.x + this._selectedImage * this._selectImageRect.width, this._selectImageRect.y, this._selectImageRect.width, this._selectImageRect.height)),
            this._selectedImage = a, this._context.strokeStyle = "#ff0000", this._context.lineWidth = 3, this._context.strokeRect(this._selectImageRect.x + this._selectedImage * this._selectImageRect.width + 2, this._selectImageRect.y + 2, this._selectImageRect.width - 4, this._selectImageRect.height - 4))
    } function f(a, b) {
        this._reels[a] = b; this._context.clearRect(this._reelImageRect.x + Math.floor(a / (this._config.numReelImages + 2)) * this._reelImageRect.width, this._reelImageRect.y + a % (this._config.numReelImages + 2) * this._reelImageRect.height,
            this._reelImageRect.width, this._reelImageRect.height); this._context.fillStyle = "#8c8c8c"; this._context.globalAlpha = 0.5; this._context.fillRect(this._reelImageRect.x + Math.floor(a / (this._config.numReelImages + 2)) * this._reelImageRect.width, this._reelImageRect.y + a % (this._config.numReelImages + 2) * this._reelImageRect.height, this._reelImageRect.width, this._reelImageRect.height); this._context.globalAlpha = 1; this._context.drawImage(this._config.reelImages[this._config.cardsInfo[b].reelImageIndex], this._config.cardsInfo[b].x,
                this._config.cardsInfo[b].y, this._config.reelWidth, this._config.imageHeight, this._reelImageRect.x + Math.floor(a / (this._config.numReelImages + 2)) * this._reelImageRect.width, this._reelImageRect.y + a % (this._config.numReelImages + 2) * this._reelImageRect.height, this._reelImageRect.width, this._reelImageRect.height)
    } function g(a) {
        var b = a; "touchstart" == a.type && (b = a.originalEvent.touches[0]); a = Math.floor((b.clientX - this._gameContainer.position().left) / Device.scale) - this.x(); var c = Math.floor((b.clientY - this._gameContainer.position().top) /
            Device.scale) - this.y(); d(this._customResultButtonRect.x, this._customResultButtonRect.y, this._customResultButtonRect.width, this._customResultButtonRect.height, a, c) ? (this._context.fillStyle = this._useCustom ? "#00ff00" : "#ff0000", this._context.fillRect(this._customResultButtonRect.x, this._customResultButtonRect.y, this._customResultButtonRect.width, this._customResultButtonRect.height), this._useCustom = !this._useCustom) : d(this._selectImageRect.x, this._selectImageRect.y, this._config.numImages * this._selectImageRect.width,
                this._selectImageRect.height, a, c) ? e.call(this, Math.floor((a - this._selectImageRect.x) / this._selectImageRect.width)) : d(this._reelImageRect.x, this._reelImageRect.y + this._reelImageRect.height, this._config.numReels * this._reelImageRect.width, this._config.numReelImages * this._reelImageRect.height, a, c) && (b = Math.floor((a - this._reelImageRect.x) / this._reelImageRect.width), a = Math.floor((c - (this._reelImageRect.y + this._reelImageRect.height)) / this._reelImageRect.height), c = b * (this._config.numReelImages + 2) + a + 1, console.log(a,
                    b), f.call(this, c, this._selectedImage))
    } function h(a) { this._open ? this.setPosition(-CustomResultView.WIDTH - this._config.paddingX, this.y()) : this.setPosition(0 - this._config.paddingX, this.y()); this._open = !this._open } return {
        init: function (a) {
            this._config = a; this._useCustom = this._open = !1; this._reels = []; this._selectedImage = -1; this._gameContainer = $("#Game"); this._customResultButtonRect = { x: 675, y: 60, width: 100, height: 45 }; this._selectImageRect = { x: 30, y: 130, width: 55, height: 55 }; this._reelImageRect = {
                x: 30, y: 190, width: 55,
                height: 55
            }; this._super("customResultView", -CustomResultView.WIDTH - a.paddingX, 50); this.setSize(CustomResultView.WIDTH, 600); this.setZIndex(1E3); this._showHideButton = new Button("showHideCustomResultButton", CustomResultView.WIDTH, 245); this._showHideButton.addEventListener(MouseEvent.CLICK, h, this); this.addChild(this._showHideButton); this._context.globalAlpha = 0.5; this._context.fillRect(0, 0, CustomResultView.WIDTH, 600); this._context.globalAlpha = 1; this._context.fillStyle = "#00ff00"; this._context.fillRect(this._customResultButtonRect.x,
                this._customResultButtonRect.y, this._customResultButtonRect.width, this._customResultButtonRect.height); for (a = 0; a < this._config.numImages; a++)this._context.drawImage(this._config.reelImages[this._config.cardsInfo[a].reelImageIndex], this._config.cardsInfo[a].x, this._config.cardsInfo[a].y, this._config.reelWidth, this._config.imageHeight, this._selectImageRect.x + a * this._selectImageRect.width, this._selectImageRect.y, this._selectImageRect.width, this._selectImageRect.height); e.call(this, 0); var b = (this._config.numReelImages +
                    2) * this._config.numReels; for (a = 0; a < b; a++)this._reels[a] = 0, 0 < a % (this._config.numReelImages + 2) && a % (this._config.numReelImages + 2) < this._config.numReelImages + 1 && f.call(this, a, 0); var c = this; this._canvas.on("touchstart mousedown", function (a) { g.call(c, a) })
        }, getResult: function () { return this._useCustom ? { reels: this._reels.slice() } : null }
    }
}());
